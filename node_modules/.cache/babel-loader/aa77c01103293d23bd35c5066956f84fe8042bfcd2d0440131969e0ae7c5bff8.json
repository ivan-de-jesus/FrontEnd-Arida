{"ast":null,"code":"// landsat.js  – versión con parámetro radiusKm\nexport async function searchLandsat({\n  lat,\n  lng,\n  radiusKm = 80,\n  // ⇦ aquí defines 80 km\n  daysBack = 30,\n  cloudMax = 100,\n  limit = 1,\n  date = new Date()\n}) {\n  /* 1.  rango de fechas */\n  const endISO = date.toISOString().split('T')[0];\n  const startISO = new Date(date.getTime() - daysBack * 864e5).toISOString().split('T')[0];\n\n  /* 2.  radio → grados */\n  const degLat = radiusKm / 111.32; // latitud\n  const degLon = radiusKm / (111.32 * Math.cos(lat * Math.PI / 180)); // longitud\n\n  const bbox = [lng - degLon, lat - degLat, lng + degLon, lat + degLat];\n\n  /* 3.  petición STAC */\n  const body = {\n    collections: ['landsat-8-c2-l2'],\n    bbox,\n    datetime: `${startISO}/${endISO}`,\n    limit,\n    query: {\n      'eo:cloud_cover': {\n        lt: cloudMax\n      }\n    }\n  };\n  const res = await fetch('https://planetarycomputer.microsoft.com/api/stac/v1/search', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  if (!res.ok) throw new Error(`STAC ${res.status}: ${await res.text()}`);\n  const data = await res.json();\n  if (!data.features.length) throw new Error(`Sin escenas Landsat-8 en ${radiusKm} km y ${daysBack} días.`);\n\n  /* 4.  firmar quick-look y devolver */\n  const item = data.features[0];\n  const sas = item.assets['B4'].href.split('?')[1];\n  const sign = href => `${href}?${sas}`;\n  return {\n    bbox: item.bbox,\n    assets: {\n      quicklook: sign(item.assets.preview.href)\n    },\n    meta: {\n      sceneId: item.id,\n      acquired: item.properties.datetime,\n      cloud: item.properties['eo:cloud_cover']\n    }\n  };\n}","map":{"version":3,"names":["searchLandsat","lat","lng","radiusKm","daysBack","cloudMax","limit","date","Date","endISO","toISOString","split","startISO","getTime","degLat","degLon","Math","cos","PI","bbox","body","collections","datetime","query","lt","res","fetch","method","headers","JSON","stringify","ok","Error","status","text","data","json","features","length","item","sas","assets","href","sign","quicklook","preview","meta","sceneId","id","acquired","properties","cloud"],"sources":["C:/Users/ivan.djgonzalez/Desktop/fotoMapa/photo-gps-viewer/src/api/landsat.js"],"sourcesContent":["// landsat.js  – versión con parámetro radiusKm\r\nexport async function searchLandsat ({\r\n    lat,\r\n    lng,\r\n    radiusKm = 80,     // ⇦ aquí defines 80 km\r\n    daysBack = 30,\r\n    cloudMax = 100,\r\n    limit = 1,\r\n    date = new Date()\r\n  }) {\r\n    /* 1.  rango de fechas */\r\n    const endISO   = date.toISOString().split('T')[0]\r\n    const startISO = new Date(date.getTime() - daysBack * 864e5)\r\n                       .toISOString().split('T')[0]\r\n  \r\n    /* 2.  radio → grados */\r\n    const degLat = radiusKm / 111.32                          // latitud\r\n    const degLon = radiusKm / (111.32 * Math.cos(lat * Math.PI / 180)) // longitud\r\n  \r\n    const bbox = [lng - degLon, lat - degLat, lng + degLon, lat + degLat]\r\n  \r\n    /* 3.  petición STAC */\r\n    const body = {\r\n      collections: ['landsat-8-c2-l2'],\r\n      bbox,\r\n      datetime: `${startISO}/${endISO}`,\r\n      limit,\r\n      query: { 'eo:cloud_cover': { lt: cloudMax } }\r\n    }\r\n  \r\n    const res = await fetch(\r\n      'https://planetarycomputer.microsoft.com/api/stac/v1/search',\r\n      { method: 'POST', headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body) }\r\n    )\r\n    if (!res.ok) throw new Error(`STAC ${res.status}: ${await res.text()}`)\r\n  \r\n    const data = await res.json()\r\n    if (!data.features.length)\r\n      throw new Error(`Sin escenas Landsat-8 en ${radiusKm} km y ${daysBack} días.`)\r\n  \r\n    /* 4.  firmar quick-look y devolver */\r\n    const item = data.features[0]\r\n    const sas  = item.assets['B4'].href.split('?')[1]\r\n    const sign = (href) => `${href}?${sas}`\r\n  \r\n    return {\r\n      bbox: item.bbox,\r\n      assets: { quicklook: sign(item.assets.preview.href) },\r\n      meta: {\r\n        sceneId: item.id,\r\n        acquired: item.properties.datetime,\r\n        cloud: item.properties['eo:cloud_cover']\r\n      }\r\n    }\r\n  }\r\n  "],"mappings":"AAAA;AACA,OAAO,eAAeA,aAAaA,CAAE;EACjCC,GAAG;EACHC,GAAG;EACHC,QAAQ,GAAG,EAAE;EAAM;EACnBC,QAAQ,GAAG,EAAE;EACbC,QAAQ,GAAG,GAAG;EACdC,KAAK,GAAG,CAAC;EACTC,IAAI,GAAG,IAAIC,IAAI,CAAC;AAClB,CAAC,EAAE;EACD;EACA,MAAMC,MAAM,GAAKF,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACjD,MAAMC,QAAQ,GAAG,IAAIJ,IAAI,CAACD,IAAI,CAACM,OAAO,CAAC,CAAC,GAAGT,QAAQ,GAAG,KAAK,CAAC,CACxCM,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAE/C;EACA,MAAMG,MAAM,GAAGX,QAAQ,GAAG,MAAM,EAA0B;EAC1D,MAAMY,MAAM,GAAGZ,QAAQ,IAAI,MAAM,GAAGa,IAAI,CAACC,GAAG,CAAChB,GAAG,GAAGe,IAAI,CAACE,EAAE,GAAG,GAAG,CAAC,CAAC,EAAC;;EAEnE,MAAMC,IAAI,GAAG,CAACjB,GAAG,GAAGa,MAAM,EAAEd,GAAG,GAAGa,MAAM,EAAEZ,GAAG,GAAGa,MAAM,EAAEd,GAAG,GAAGa,MAAM,CAAC;;EAErE;EACA,MAAMM,IAAI,GAAG;IACXC,WAAW,EAAE,CAAC,iBAAiB,CAAC;IAChCF,IAAI;IACJG,QAAQ,EAAE,GAAGV,QAAQ,IAAIH,MAAM,EAAE;IACjCH,KAAK;IACLiB,KAAK,EAAE;MAAE,gBAAgB,EAAE;QAAEC,EAAE,EAAEnB;MAAS;IAAE;EAC9C,CAAC;EAED,MAAMoB,GAAG,GAAG,MAAMC,KAAK,CACrB,4DAA4D,EAC5D;IAAEC,MAAM,EAAE,MAAM;IAAEC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/DR,IAAI,EAAES,IAAI,CAACC,SAAS,CAACV,IAAI;EAAE,CAC/B,CAAC;EACD,IAAI,CAACK,GAAG,CAACM,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,QAAQP,GAAG,CAACQ,MAAM,KAAK,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC,EAAE,CAAC;EAEvE,MAAMC,IAAI,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,CAAC;EAC7B,IAAI,CAACD,IAAI,CAACE,QAAQ,CAACC,MAAM,EACvB,MAAM,IAAIN,KAAK,CAAC,4BAA4B7B,QAAQ,SAASC,QAAQ,QAAQ,CAAC;;EAEhF;EACA,MAAMmC,IAAI,GAAGJ,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC;EAC7B,MAAMG,GAAG,GAAID,IAAI,CAACE,MAAM,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC/B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACjD,MAAMgC,IAAI,GAAID,IAAI,IAAK,GAAGA,IAAI,IAAIF,GAAG,EAAE;EAEvC,OAAO;IACLrB,IAAI,EAAEoB,IAAI,CAACpB,IAAI;IACfsB,MAAM,EAAE;MAAEG,SAAS,EAAED,IAAI,CAACJ,IAAI,CAACE,MAAM,CAACI,OAAO,CAACH,IAAI;IAAE,CAAC;IACrDI,IAAI,EAAE;MACJC,OAAO,EAAER,IAAI,CAACS,EAAE;MAChBC,QAAQ,EAAEV,IAAI,CAACW,UAAU,CAAC5B,QAAQ;MAClC6B,KAAK,EAAEZ,IAAI,CAACW,UAAU,CAAC,gBAAgB;IACzC;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}