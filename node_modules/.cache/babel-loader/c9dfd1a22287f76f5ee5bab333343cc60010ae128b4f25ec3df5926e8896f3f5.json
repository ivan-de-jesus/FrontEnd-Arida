{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { searchLandsat } from '@/api/landsat';\n\n// <-- si guardaste la función en src/utils/ndwi.js:\nimport { buildNdwiUrl } from '@/utils/ndwi';\n/*  si la dejaste localmente, pégala dentro del <script> */\n\nexport default {\n  props: {\n    coords: {\n      type: Object,\n      required: true\n    }\n  },\n  data: () => ({\n    map: null\n  }),\n  async mounted() {\n    /* 1 ▸ Cargar Google Maps */\n    const loader = new Loader({\n      apiKey: process.env.VUE_APP_GOOGLE_KEY,\n      version: 'weekly'\n    });\n    const google = await loader.load();\n    const {\n      latitude: lat,\n      longitude: lng\n    } = this.coords;\n    this.map = new google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat,\n        lng\n      },\n      zoom: 15,\n      disableDefaultUI: true\n    });\n    new google.maps.Marker({\n      position: {\n        lat,\n        lng\n      },\n      map: this.map\n    });\n\n    /* 2 ▸ Traer la escena Landsat */\n    try {\n      const ls8 = await searchLandsat({\n        lat,\n        lng\n      }); // ← itemId, sas y bbox\n\n      /* 2a.  Poner mini-preview (opcional) */\n      const [west, south, east, north] = ls8.bbox;\n      const quick = new google.maps.GroundOverlay(ls8.assets.quicklook, {\n        north,\n        south,\n        east,\n        west\n      }, {\n        opacity: 0.5\n      });\n      quick.setMap(this.map);\n\n      /* 2b.  Construir URL de teselas NDWI → semáforo */\n      const tpl = buildNdwiUrl({\n        itemId: ls8.itemId,\n        sas: ls8.sas\n      });\n      const ndwiLayer = new google.maps.ImageMapType({\n        getTileUrl: (coord, z) => tpl.replace('{z}', z).replace('{x}', coord.x).replace('{y}', coord.y),\n        tileSize: new google.maps.Size(256, 256),\n        opacity: 0.7,\n        name: 'NDWI'\n      });\n      this.map.overlayMapTypes.push(ndwiLayer);\n    } catch (err) {\n      console.warn('Landsat no disponible:', err.message);\n    }\n  }\n};","map":{"version":3,"names":["Loader","searchLandsat","buildNdwiUrl","props","coords","type","Object","required","data","map","mounted","loader","apiKey","process","env","VUE_APP_GOOGLE_KEY","version","google","load","latitude","lat","longitude","lng","maps","Map","document","getElementById","center","zoom","disableDefaultUI","Marker","position","ls8","west","south","east","north","bbox","quick","GroundOverlay","assets","quicklook","opacity","setMap","tpl","itemId","sas","ndwiLayer","ImageMapType","getTileUrl","coord","z","replace","x","y","tileSize","Size","name","overlayMapTypes","push","err","console","warn","message"],"sources":["src/components/MapView.vue"],"sourcesContent":["<template>\r\n  <div id=\"map\" class=\"w-100 rounded shadow\" style=\"height:350px;\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { Loader } from '@googlemaps/js-api-loader'\r\nimport { searchLandsat } from '@/api/landsat'\r\n\r\n// <-- si guardaste la función en src/utils/ndwi.js:\r\nimport { buildNdwiUrl } from '@/utils/ndwi'\r\n/*  si la dejaste localmente, pégala dentro del <script> */\r\n\r\nexport default {\r\n  props: { coords: { type: Object, required: true } },\r\n  data: () => ({ map: null }),\r\n  async mounted () {\r\n    /* 1 ▸ Cargar Google Maps */\r\n    const loader = new Loader({\r\n      apiKey : process.env.VUE_APP_GOOGLE_KEY,\r\n      version: 'weekly'\r\n    })\r\n    const google = await loader.load()\r\n\r\n    const { latitude: lat, longitude: lng } = this.coords\r\n    this.map = new google.maps.Map(document.getElementById('map'), {\r\n      center: { lat, lng },\r\n      zoom  : 15,\r\n      disableDefaultUI: true\r\n    })\r\n    new google.maps.Marker({ position: { lat, lng }, map: this.map })\r\n\r\n    /* 2 ▸ Traer la escena Landsat */\r\n    try {\r\n      const ls8 = await searchLandsat({ lat, lng })   // ← itemId, sas y bbox\r\n\r\n      /* 2a.  Poner mini-preview (opcional) */\r\n      const [west, south, east, north] = ls8.bbox\r\n      const quick = new google.maps.GroundOverlay(\r\n        ls8.assets.quicklook,\r\n        { north, south, east, west },\r\n        { opacity: 0.5 }\r\n      )\r\n      quick.setMap(this.map)\r\n\r\n      /* 2b.  Construir URL de teselas NDWI → semáforo */\r\n      const tpl = buildNdwiUrl({ itemId: ls8.itemId, sas: ls8.sas })\r\n\r\n      const ndwiLayer = new google.maps.ImageMapType({\r\n        getTileUrl: (coord, z) =>\r\n          tpl.replace('{z}', z)\r\n             .replace('{x}', coord.x)\r\n             .replace('{y}', coord.y),\r\n        tileSize: new google.maps.Size(256, 256),\r\n        opacity : 0.7,\r\n        name    : 'NDWI'\r\n      })\r\n      this.map.overlayMapTypes.push(ndwiLayer)\r\n\r\n    } catch (err) {\r\n      console.warn('Landsat no disponible:', err.message)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;;AAKA,SAAAA,MAAA;AACA,SAAAC,aAAA;;AAEA;AACA,SAAAC,YAAA;AACA;;AAEA;EACAC,KAAA;IAAAC,MAAA;MAAAC,IAAA,EAAAC,MAAA;MAAAC,QAAA;IAAA;EAAA;EACAC,IAAA,EAAAA,CAAA;IAAAC,GAAA;EAAA;EACA,MAAAC,QAAA;IACA;IACA,MAAAC,MAAA,OAAAX,MAAA;MACAY,MAAA,EAAAC,OAAA,CAAAC,GAAA,CAAAC,kBAAA;MACAC,OAAA;IACA;IACA,MAAAC,MAAA,SAAAN,MAAA,CAAAO,IAAA;IAEA;MAAAC,QAAA,EAAAC,GAAA;MAAAC,SAAA,EAAAC;IAAA,SAAAlB,MAAA;IACA,KAAAK,GAAA,OAAAQ,MAAA,CAAAM,IAAA,CAAAC,GAAA,CAAAC,QAAA,CAAAC,cAAA;MACAC,MAAA;QAAAP,GAAA;QAAAE;MAAA;MACAM,IAAA;MACAC,gBAAA;IACA;IACA,IAAAZ,MAAA,CAAAM,IAAA,CAAAO,MAAA;MAAAC,QAAA;QAAAX,GAAA;QAAAE;MAAA;MAAAb,GAAA,OAAAA;IAAA;;IAEA;IACA;MACA,MAAAuB,GAAA,SAAA/B,aAAA;QAAAmB,GAAA;QAAAE;MAAA;;MAEA;MACA,OAAAW,IAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,KAAA,IAAAJ,GAAA,CAAAK,IAAA;MACA,MAAAC,KAAA,OAAArB,MAAA,CAAAM,IAAA,CAAAgB,aAAA,CACAP,GAAA,CAAAQ,MAAA,CAAAC,SAAA,EACA;QAAAL,KAAA;QAAAF,KAAA;QAAAC,IAAA;QAAAF;MAAA,GACA;QAAAS,OAAA;MAAA,CACA;MACAJ,KAAA,CAAAK,MAAA,MAAAlC,GAAA;;MAEA;MACA,MAAAmC,GAAA,GAAA1C,YAAA;QAAA2C,MAAA,EAAAb,GAAA,CAAAa,MAAA;QAAAC,GAAA,EAAAd,GAAA,CAAAc;MAAA;MAEA,MAAAC,SAAA,OAAA9B,MAAA,CAAAM,IAAA,CAAAyB,YAAA;QACAC,UAAA,EAAAA,CAAAC,KAAA,EAAAC,CAAA,KACAP,GAAA,CAAAQ,OAAA,QAAAD,CAAA,EACAC,OAAA,QAAAF,KAAA,CAAAG,CAAA,EACAD,OAAA,QAAAF,KAAA,CAAAI,CAAA;QACAC,QAAA,MAAAtC,MAAA,CAAAM,IAAA,CAAAiC,IAAA;QACAd,OAAA;QACAe,IAAA;MACA;MACA,KAAAhD,GAAA,CAAAiD,eAAA,CAAAC,IAAA,CAAAZ,SAAA;IAEA,SAAAa,GAAA;MACAC,OAAA,CAAAC,IAAA,2BAAAF,GAAA,CAAAG,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}