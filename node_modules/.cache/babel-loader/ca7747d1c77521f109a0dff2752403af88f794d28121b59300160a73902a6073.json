{"ast":null,"code":"import * as exifr from 'exifr'; // árbol sacudible\n\nexport default {\n  data() {\n    return {\n      preview: null,\n      coords: null,\n      error: null\n    };\n  },\n  methods: {\n    async handleFile(e) {\n      this.error = null;\n      this.coords = null;\n      const file = e.target.files[0];\n      if (!file) return;\n\n      // Vista previa\n      this.preview = URL.createObjectURL(file);\n      try {\n        const gpsData = await exifr.gps(file); // ← puede ser undefined\n\n        if (gpsData && gpsData.latitude && gpsData.longitude) {\n          this.coords = {\n            latitude: gpsData.latitude,\n            longitude: gpsData.longitude\n          };\n          // emit opcional si quieres dispararlo aquí\n          // this.$emit('coords', this.coords)\n        } else {\n          this.error = 'La imagen no contiene metadatos GPS.';\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = 'Hubo un problema al leer los metadatos EXIF.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["exifr","data","preview","coords","error","methods","handleFile","e","file","target","files","URL","createObjectURL","gpsData","gps","latitude","longitude","err","console"],"sources":["src/components/PhotoCapture.vue"],"sourcesContent":["<template>\r\n  <div class=\"text-center\">\r\n    <input\r\n      ref=\"file\"\r\n      type=\"file\"\r\n      accept=\"image/*;capture=camera\"\r\n      class=\"form-control mb-3\"\r\n      @change=\"handleFile\"\r\n    />\r\n\r\n    <img v-if=\"preview\" :src=\"preview\" class=\"img-fluid rounded shadow\"/>\r\n\r\n    <div v-if=\"coords\" class=\"alert alert-success mt-3\">\r\n      Lat: {{ coords.latitude }}, Lng: {{ coords.longitude }}\r\n      <button class=\"btn btn-sm btn-primary ms-2\" @click=\"$emit('coords', coords)\">\r\n        Ver en mapa\r\n      </button>\r\n    </div>\r\n\r\n    <div v-else-if=\"error\" class=\"alert alert-warning mt-3\">{{ error }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as exifr from 'exifr'              // árbol sacudible\r\n\r\nexport default {\r\n  data () {\r\n    return { preview: null, coords: null, error: null }\r\n  },\r\n  methods: {\r\n   async handleFile (e) {\r\n  this.error = null\r\n  this.coords = null\r\n  const file = e.target.files[0]\r\n  if (!file) return\r\n\r\n  // Vista previa\r\n  this.preview = URL.createObjectURL(file)\r\n\r\n  try {\r\n    const gpsData = await exifr.gps(file)       // ← puede ser undefined\r\n\r\n    if (gpsData && gpsData.latitude && gpsData.longitude) {\r\n      this.coords = {\r\n        latitude:  gpsData.latitude,\r\n        longitude: gpsData.longitude\r\n      }\r\n      // emit opcional si quieres dispararlo aquí\r\n      // this.$emit('coords', this.coords)\r\n    } else {\r\n      this.error = 'La imagen no contiene metadatos GPS.'\r\n    }\r\n  } catch (err) {\r\n    console.error(err)\r\n    this.error = 'Hubo un problema al leer los metadatos EXIF.'\r\n  }\r\n}\r\n\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAwBA,YAAAA,KAAA;;AAEA;EACAC,KAAA;IACA;MAAAC,OAAA;MAAAC,MAAA;MAAAC,KAAA;IAAA;EACA;EACAC,OAAA;IACA,MAAAC,WAAAC,CAAA;MACA,KAAAH,KAAA;MACA,KAAAD,MAAA;MACA,MAAAK,IAAA,GAAAD,CAAA,CAAAE,MAAA,CAAAC,KAAA;MACA,KAAAF,IAAA;;MAEA;MACA,KAAAN,OAAA,GAAAS,GAAA,CAAAC,eAAA,CAAAJ,IAAA;MAEA;QACA,MAAAK,OAAA,SAAAb,KAAA,CAAAc,GAAA,CAAAN,IAAA;;QAEA,IAAAK,OAAA,IAAAA,OAAA,CAAAE,QAAA,IAAAF,OAAA,CAAAG,SAAA;UACA,KAAAb,MAAA;YACAY,QAAA,EAAAF,OAAA,CAAAE,QAAA;YACAC,SAAA,EAAAH,OAAA,CAAAG;UACA;UACA;UACA;QACA;UACA,KAAAZ,KAAA;QACA;MACA,SAAAa,GAAA;QACAC,OAAA,CAAAd,KAAA,CAAAa,GAAA;QACA,KAAAb,KAAA;MACA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}