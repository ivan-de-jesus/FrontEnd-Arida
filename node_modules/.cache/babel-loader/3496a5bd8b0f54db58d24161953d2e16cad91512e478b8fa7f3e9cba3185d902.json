{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      email: '',\n      password: '',\n      remember: false,\n      error: ''\n    };\n  },\n  computed: {\n    // Habilita el botón solo si los campos no están vacíos\n    isFormValid() {\n      return this.email !== '' && this.password !== '';\n    }\n  },\n  methods: {\n    async onSubmit() {\n      this.error = '';\n      try {\n        const res = await axios.post('http://localhost:3000/api/login', {\n          email: this.email,\n          password: this.password\n        });\n        localStorage.setItem('authToken', res.data.token);\n        this.$router.push({\n          name: 'dashboard'\n        });\n      } catch (err) {\n        this.error = err.response && err.response.data.message || 'No se pudo iniciar sesión';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","email","password","remember","error","computed","isFormValid","methods","onSubmit","res","post","localStorage","setItem","token","$router","push","err","response","message"],"sources":["src/views/Login.vue"],"sourcesContent":["<!-- src/components/Login.vue -->\n<template>\n  <div class=\"d-flex justify-content-center align-items-center min-vh-100 bg-light\">\n    <div class=\"card w-100 mx-3\" style=\"max-width: 400px;\">\n      <div class=\"card-body\">\n        <h4 class=\"card-title text-center mb-4\">Iniciar Sesión</h4>\n\n        <div v-if=\"error\" class=\"alert alert-danger py-2\" role=\"alert\">\n          {{ error }}\n        </div>\n\n        <form @submit.prevent=\"onSubmit\">\n          <div class=\"mb-3\">\n            <label for=\"email\" class=\"form-label\">Correo electrónico</label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              v-model.trim=\"email\"\n              class=\"form-control\"\n              placeholder=\"tú@correo.com\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3\">\n            <label for=\"password\" class=\"form-label\">Contraseña</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              v-model=\"password\"\n              class=\"form-control\"\n              placeholder=\"••••••••\"\n              required\n            />\n          </div>\n\n          <div class=\"mb-3 form-check\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              v-model=\"remember\"\n              class=\"form-check-input\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">\n              Recuérdame\n            </label>\n          </div>\n\n          <p class=\"text-center mt-3\">\n  ¿No tienes cuenta?\n  <router-link to=\"/register\">Regístrate aquí</router-link>\n</p>\n\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary w-100\"\n            :disabled=\"!isFormValid\"\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'Login',\n\n  data() {\n    return {\n      email: '',\n      password: '',\n      remember: false,\n      error: ''\n    }\n  },\n\n  computed: {\n    // Habilita el botón solo si los campos no están vacíos\n    isFormValid() {\n      return this.email !== '' && this.password !== ''\n    }\n  },\n\n  methods: {\n    async onSubmit() {\n  this.error = ''\n  try {\n    const res = await axios.post(\n      'http://localhost:3000/api/login',\n      { email: this.email, password: this.password }\n    )\n    localStorage.setItem('authToken', res.data.token)\n    this.$router.push({ name: 'dashboard' })\n  } catch (err) {\n    this.error =\n      (err.response && err.response.data.message) ||\n      'No se pudo iniciar sesión'\n  }\n}\n\n  }\n}\n</script>\n\n<style scoped>\n/* Fondo suave para toda la pantalla */\n.bg-light {\n  background-color: #f8f9fa !important;\n}\n\n/* Asegura contraste en inputs en modo oscuro del navegador */\ninput.form-control {\n  background-clip: padding-box;\n}\n\n/* Ajustes opcionales: centra el contenido de la card */\n.card-body {\n  display: flex;\n  flex-direction: column;\n}\n</style>\n"],"mappings":";AAmEA,OAAAA,KAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,QAAA;MACAC,KAAA;IACA;EACA;EAEAC,QAAA;IACA;IACAC,YAAA;MACA,YAAAL,KAAA,gBAAAC,QAAA;IACA;EACA;EAEAK,OAAA;IACA,MAAAC,SAAA;MACA,KAAAJ,KAAA;MACA;QACA,MAAAK,GAAA,SAAAX,KAAA,CAAAY,IAAA,CACA,mCACA;UAAAT,KAAA,OAAAA,KAAA;UAAAC,QAAA,OAAAA;QAAA,CACA;QACAS,YAAA,CAAAC,OAAA,cAAAH,GAAA,CAAAT,IAAA,CAAAa,KAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;UAAAhB,IAAA;QAAA;MACA,SAAAiB,GAAA;QACA,KAAAZ,KAAA,GACAY,GAAA,CAAAC,QAAA,IAAAD,GAAA,CAAAC,QAAA,CAAAjB,IAAA,CAAAkB,OAAA,IACA;MACA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}