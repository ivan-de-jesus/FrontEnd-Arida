{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { Loader } from '@googlemaps/js-api-loader';\nimport { searchLandsat } from '@/api/landsat';\nexport default {\n  name: 'MapView',\n  props: {\n    coords: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      map: null\n    };\n  },\n  async mounted() {\n    const {\n      latitude: lat,\n      longitude: lng\n    } = this.coords;\n\n    // 1️⃣ Intentar cargar Google Maps y marcador\n    try {\n      const google = await new Loader({\n        apiKey: process.env.VUE_APP_GOOGLE_KEY,\n        version: 'weekly'\n      }).load();\n      this.map = new google.maps.Map(document.getElementById('map'), {\n        center: {\n          lat,\n          lng\n        },\n        zoom: 15,\n        disableDefaultUI: true\n      });\n      new google.maps.Marker({\n        position: {\n          lat,\n          lng\n        },\n        map: this.map\n      });\n    } catch (err) {\n      console.warn('Google Maps no se pudo cargar:', err);\n    }\n\n    // 2️⃣ Calcular NDWI medio y emitir el semáforo\n    console.log('▶️ A punto de calcular NDWI medio…');\n    try {\n      console.log('    → Llamando a searchLandsat');\n      const ls8 = await searchLandsat({\n        lat,\n        lng\n      });\n      console.log('    ← searchLandsat devolvió:', ls8);\n\n      // Área de ~100 m alrededor del pin\n      const buffer = 0.001;\n      const geom = {\n        type: 'Point',\n        coordinates: [lng, lat]\n      };\n\n      // Expresión NDWI\n      const expr = '(nir08 - swir16) / (nir08 + swir16)';\n      // URL correcta para el endpoint aggregate\n      const urlAgg = `https://planetarycomputer.microsoft.com/api/data/v1/collections/landsat-c2-l2/items/${encodeURIComponent(ls8.itemId)}/aggregate` + `?assets=nir08,swir16` + `&expression=${encodeURIComponent(expr)}` + `&geom=${encodeURIComponent(JSON.stringify(geom))}` + (ls8.sas ? `&${ls8.sas}` : '');\n      console.log('    → URL aggregate NDWI:', urlAgg);\n      const response = await fetch(urlAgg);\n      console.log('    ← aggregate HTTP status:', response.status);\n      const json = await response.json();\n      console.log('    ← aggregate JSON:', json);\n\n      // Extraer valor mean\n      const meanNdwi = json.result?.mean ?? json.mean ?? null;\n      console.log('    → meanNdwi =', meanNdwi);\n\n      // Determinar estado\n      let status;\n      if (meanNdwi === null) status = 'Sin datos';else if (meanNdwi < 0.10) status = 'Seco';else if (meanNdwi < 0.25) status = 'Medio';else status = 'Húmedo';\n      console.log('    → status =', status);\n\n      // Emitir siempre el estado\n      this.$emit('ndwi-status', {\n        ndwi: meanNdwi,\n        status\n      });\n    } catch (error) {\n      console.error('Error calculando NDWI:', error);\n      this.$emit('ndwi-status', {\n        ndwi: null,\n        status: 'Sin datos'\n      });\n    }\n  }\n};","map":{"version":3,"names":["Loader","searchLandsat","name","props","coords","type","Object","required","data","map","mounted","latitude","lat","longitude","lng","google","apiKey","process","env","VUE_APP_GOOGLE_KEY","version","load","maps","Map","document","getElementById","center","zoom","disableDefaultUI","Marker","position","err","console","warn","log","ls8","buffer","geom","coordinates","expr","urlAgg","encodeURIComponent","itemId","JSON","stringify","sas","response","fetch","status","json","meanNdwi","result","mean","$emit","ndwi","error"],"sources":["src/components/MapView.vue"],"sourcesContent":["<!-- src/components/MapView.vue -->\r\n<template>\r\n  <div id=\"map\" class=\"w-100 rounded shadow\" style=\"height:350px; position: relative;\">\r\n    <!-- El mapa se inicializa aquí -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Loader } from '@googlemaps/js-api-loader'\r\nimport { searchLandsat } from '@/api/landsat'\r\n\r\nexport default {\r\n  name: 'MapView',\r\n  props: {\r\n    coords: { type: Object, required: true }\r\n  },\r\n  data() {\r\n    return { map: null }\r\n  },\r\n  async mounted() {\r\n    const { latitude: lat, longitude: lng } = this.coords\r\n\r\n    // 1️⃣ Intentar cargar Google Maps y marcador\r\n    try {\r\n      const google = await new Loader({\r\n        apiKey : process.env.VUE_APP_GOOGLE_KEY,\r\n        version: 'weekly'\r\n      }).load()\r\n\r\n      this.map = new google.maps.Map(document.getElementById('map'), {\r\n        center           : { lat, lng },\r\n        zoom             : 15,\r\n        disableDefaultUI : true\r\n      })\r\n      new google.maps.Marker({ position: { lat, lng }, map: this.map })\r\n    } catch (err) {\r\n      console.warn('Google Maps no se pudo cargar:', err)\r\n    }\r\n\r\n    // 2️⃣ Calcular NDWI medio y emitir el semáforo\r\n    console.log('▶️ A punto de calcular NDWI medio…')\r\n    try {\r\n      console.log('    → Llamando a searchLandsat')\r\n      const ls8 = await searchLandsat({ lat, lng })\r\n      console.log('    ← searchLandsat devolvió:', ls8)\r\n\r\n      // Área de ~100 m alrededor del pin\r\n      const buffer = 0.001\r\n      const geom = {\r\n  type       : 'Point',\r\n  coordinates: [ lng, lat ]\r\n}\r\n\r\n      // Expresión NDWI\r\n       const expr = '(nir08 - swir16) / (nir08 + swir16)'\r\n      // URL correcta para el endpoint aggregate\r\n      const urlAgg = \r\n        `https://planetarycomputer.microsoft.com/api/data/v1/collections/landsat-c2-l2/items/${encodeURIComponent(ls8.itemId)}/aggregate`\r\n        + `?assets=nir08,swir16`\r\n        + `&expression=${encodeURIComponent(expr)}`\r\n        + `&geom=${encodeURIComponent(JSON.stringify(geom))}`\r\n        + (ls8.sas ? `&${ls8.sas}` : '')\r\n\r\n      console.log('    → URL aggregate NDWI:', urlAgg)\r\n      const response = await fetch(urlAgg)\r\n      console.log('    ← aggregate HTTP status:', response.status)\r\n      const json = await response.json()\r\n      console.log('    ← aggregate JSON:', json)\r\n\r\n      // Extraer valor mean\r\n      const meanNdwi = json.result?.mean ?? json.mean ?? null\r\n      console.log('    → meanNdwi =', meanNdwi)\r\n\r\n      // Determinar estado\r\n      let status\r\n      if (meanNdwi === null) status = 'Sin datos'\r\n      else if (meanNdwi < 0.10) status = 'Seco'\r\n      else if (meanNdwi < 0.25) status = 'Medio'\r\n      else status = 'Húmedo'\r\n      console.log('    → status =', status)\r\n\r\n      // Emitir siempre el estado\r\n      this.$emit('ndwi-status', { ndwi: meanNdwi, status })\r\n    } catch (error) {\r\n      console.error('Error calculando NDWI:', error)\r\n      this.$emit('ndwi-status', { ndwi: null, status: 'Sin datos' })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#map {\r\n  position: relative;\r\n}\r\n</style>\r\n"],"mappings":";;AAQA,SAAAA,MAAA;AACA,SAAAC,aAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,MAAA;MAAAC,IAAA,EAAAC,MAAA;MAAAC,QAAA;IAAA;EACA;EACAC,KAAA;IACA;MAAAC,GAAA;IAAA;EACA;EACA,MAAAC,QAAA;IACA;MAAAC,QAAA,EAAAC,GAAA;MAAAC,SAAA,EAAAC;IAAA,SAAAV,MAAA;;IAEA;IACA;MACA,MAAAW,MAAA,aAAAf,MAAA;QACAgB,MAAA,EAAAC,OAAA,CAAAC,GAAA,CAAAC,kBAAA;QACAC,OAAA;MACA,GAAAC,IAAA;MAEA,KAAAZ,GAAA,OAAAM,MAAA,CAAAO,IAAA,CAAAC,GAAA,CAAAC,QAAA,CAAAC,cAAA;QACAC,MAAA;UAAAd,GAAA;UAAAE;QAAA;QACAa,IAAA;QACAC,gBAAA;MACA;MACA,IAAAb,MAAA,CAAAO,IAAA,CAAAO,MAAA;QAAAC,QAAA;UAAAlB,GAAA;UAAAE;QAAA;QAAAL,GAAA,OAAAA;MAAA;IACA,SAAAsB,GAAA;MACAC,OAAA,CAAAC,IAAA,mCAAAF,GAAA;IACA;;IAEA;IACAC,OAAA,CAAAE,GAAA;IACA;MACAF,OAAA,CAAAE,GAAA;MACA,MAAAC,GAAA,SAAAlC,aAAA;QAAAW,GAAA;QAAAE;MAAA;MACAkB,OAAA,CAAAE,GAAA,kCAAAC,GAAA;;MAEA;MACA,MAAAC,MAAA;MACA,MAAAC,IAAA;QACAhC,IAAA;QACAiC,WAAA,GAAAxB,GAAA,EAAAF,GAAA;MACA;;MAEA;MACA,MAAA2B,IAAA;MACA;MACA,MAAAC,MAAA,GACA,uFAAAC,kBAAA,CAAAN,GAAA,CAAAO,MAAA,gBACA,yBACA,eAAAD,kBAAA,CAAAF,IAAA,MACA,SAAAE,kBAAA,CAAAE,IAAA,CAAAC,SAAA,CAAAP,IAAA,QACAF,GAAA,CAAAU,GAAA,OAAAV,GAAA,CAAAU,GAAA;MAEAb,OAAA,CAAAE,GAAA,8BAAAM,MAAA;MACA,MAAAM,QAAA,SAAAC,KAAA,CAAAP,MAAA;MACAR,OAAA,CAAAE,GAAA,iCAAAY,QAAA,CAAAE,MAAA;MACA,MAAAC,IAAA,SAAAH,QAAA,CAAAG,IAAA;MACAjB,OAAA,CAAAE,GAAA,0BAAAe,IAAA;;MAEA;MACA,MAAAC,QAAA,GAAAD,IAAA,CAAAE,MAAA,EAAAC,IAAA,IAAAH,IAAA,CAAAG,IAAA;MACApB,OAAA,CAAAE,GAAA,qBAAAgB,QAAA;;MAEA;MACA,IAAAF,MAAA;MACA,IAAAE,QAAA,WAAAF,MAAA,oBACA,IAAAE,QAAA,SAAAF,MAAA,eACA,IAAAE,QAAA,SAAAF,MAAA,gBACAA,MAAA;MACAhB,OAAA,CAAAE,GAAA,mBAAAc,MAAA;;MAEA;MACA,KAAAK,KAAA;QAAAC,IAAA,EAAAJ,QAAA;QAAAF;MAAA;IACA,SAAAO,KAAA;MACAvB,OAAA,CAAAuB,KAAA,2BAAAA,KAAA;MACA,KAAAF,KAAA;QAAAC,IAAA;QAAAN,MAAA;MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}