{"ast":null,"code":"import * as exifr from 'exifr'; // árbol sacudible\n\nexport default {\n  data() {\n    return {\n      preview: null,\n      coords: null,\n      error: null\n    };\n  },\n  methods: {\n    async handleFile(e) {\n      this.error = null;\n      const file = e.target.files[0];\n      if (!file) return;\n\n      // 1) vista previa (URL.createObjectURL es O(1))\n      this.preview = URL.createObjectURL(file);\n\n      // 2) extraer EXIF de forma asíncrona (solo GPS)\n      const {\n        latitude,\n        longitude\n      } = await exifr.gps(file).catch(() => ({}));\n      if (latitude && longitude) {\n        this.coords = {\n          latitude,\n          longitude\n        };\n      } else {\n        this.error = 'La imagen no contiene coordenadas GPS en sus metadatos.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["exifr","data","preview","coords","error","methods","handleFile","e","file","target","files","URL","createObjectURL","latitude","longitude","gps","catch"],"sources":["src/components/PhotoCapture.vue"],"sourcesContent":["<template>\r\n  <div class=\"text-center\">\r\n    <input\r\n      ref=\"file\"\r\n      type=\"file\"\r\n      accept=\"image/*;capture=camera\"\r\n      class=\"form-control mb-3\"\r\n      @change=\"handleFile\"\r\n    />\r\n\r\n    <img v-if=\"preview\" :src=\"preview\" class=\"img-fluid rounded shadow\"/>\r\n\r\n    <div v-if=\"coords\" class=\"alert alert-success mt-3\">\r\n      Lat: {{ coords.latitude }}, Lng: {{ coords.longitude }}\r\n      <button class=\"btn btn-sm btn-primary ms-2\" @click=\"$emit('coords', coords)\">\r\n        Ver en mapa\r\n      </button>\r\n    </div>\r\n\r\n    <div v-else-if=\"error\" class=\"alert alert-warning mt-3\">{{ error }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as exifr from 'exifr'              // árbol sacudible\r\n\r\nexport default {\r\n  data () {\r\n    return { preview: null, coords: null, error: null }\r\n  },\r\n  methods: {\r\n    async handleFile (e) {\r\n      this.error = null\r\n      const file = e.target.files[0]\r\n      if (!file) return\r\n\r\n      // 1) vista previa (URL.createObjectURL es O(1))\r\n      this.preview = URL.createObjectURL(file)\r\n\r\n      // 2) extraer EXIF de forma asíncrona (solo GPS)\r\n      const { latitude, longitude } = await exifr.gps(file).catch(() => ({}))\r\n\r\n      if (latitude && longitude) {\r\n        this.coords = { latitude, longitude }\r\n      } else {\r\n        this.error = 'La imagen no contiene coordenadas GPS en sus metadatos.'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAwBA,YAAAA,KAAA;;AAEA;EACAC,KAAA;IACA;MAAAC,OAAA;MAAAC,MAAA;MAAAC,KAAA;IAAA;EACA;EACAC,OAAA;IACA,MAAAC,WAAAC,CAAA;MACA,KAAAH,KAAA;MACA,MAAAI,IAAA,GAAAD,CAAA,CAAAE,MAAA,CAAAC,KAAA;MACA,KAAAF,IAAA;;MAEA;MACA,KAAAN,OAAA,GAAAS,GAAA,CAAAC,eAAA,CAAAJ,IAAA;;MAEA;MACA;QAAAK,QAAA;QAAAC;MAAA,UAAAd,KAAA,CAAAe,GAAA,CAAAP,IAAA,EAAAQ,KAAA;MAEA,IAAAH,QAAA,IAAAC,SAAA;QACA,KAAAX,MAAA;UAAAU,QAAA;UAAAC;QAAA;MACA;QACA,KAAAV,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}