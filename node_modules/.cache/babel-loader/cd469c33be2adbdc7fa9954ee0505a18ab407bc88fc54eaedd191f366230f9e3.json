{"ast":null,"code":"import * as exifr from 'exifr';\nexport default {\n  name: 'PhotoCapture',\n  data() {\n    return {\n      preview: null,\n      coords: null,\n      // { latitude, longitude }\n      error: null\n    };\n  },\n  computed: {\n    ready() {\n      return this.coords && Number.isFinite(this.coords.latitude) && Number.isFinite(this.coords.longitude);\n    }\n  },\n  methods: {\n    async handleFile(e) {\n      this.error = null;\n      this.coords = null;\n      const file = e.target.files[0];\n      if (!file) return;\n      this.preview = URL.createObjectURL(file);\n      try {\n        const gps = await exifr.gps(file);\n        if (gps?.latitude && gps?.longitude) {\n          this.coords = {\n            latitude: Number(gps.latitude),\n            longitude: Number(gps.longitude)\n          };\n        } else {\n          this.error = 'La imagen no contiene metadatos GPS.';\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = 'Error al leer los metadatos EXIF.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["exifr","name","data","preview","coords","error","computed","ready","Number","isFinite","latitude","longitude","methods","handleFile","e","file","target","files","URL","createObjectURL","gps","err","console"],"sources":["src/components/PhotoCapture.vue"],"sourcesContent":["<template>\r\n  <div class=\"text-center\">\r\n    <!-- selector -->\r\n    <input\r\n      ref=\"file\"\r\n      type=\"file\"\r\n      accept=\"image/*;capture=camera\"\r\n      class=\"form-control mb-3\"\r\n      @change=\"handleFile\"\r\n    />\r\n\r\n    <!-- miniatura -->\r\n    <img\r\n      v-if=\"preview\"\r\n      :src=\"preview\"\r\n      class=\"img-fluid rounded shadow\"\r\n    />\r\n\r\n    <!-- coordenadas + botÃ³n -->\r\n    <div v-if=\"coords\" class=\"alert alert-success mt-3\">\r\n      Lat: {{ coords.latitude }}, Lng: {{ coords.longitude }}\r\n\r\n      <button\r\n        class=\"btn btn-sm btn-primary ms-2\"\r\n        :disabled=\"!ready\"\r\n        @click=\"$emit('coords', coords)\"\r\n      >\r\n        Ver en mapa\r\n      </button>\r\n    </div>\r\n\r\n    <!-- error -->\r\n    <div v-else-if=\"error\" class=\"alert alert-warning mt-3\">\r\n      {{ error }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as exifr from 'exifr'\r\n\r\nexport default {\r\n  name: 'PhotoCapture',\r\n  data () {\r\n    return {\r\n      preview: null,\r\n      coords:  null,          // { latitude, longitude }\r\n      error:   null\r\n    }\r\n  },\r\n  computed: {\r\n    ready () {\r\n      return this.coords &&\r\n             Number.isFinite(this.coords.latitude) &&\r\n             Number.isFinite(this.coords.longitude)\r\n    }\r\n  },\r\n  methods: {\r\n    async handleFile (e) {\r\n      this.error  = null\r\n      this.coords = null\r\n\r\n      const file = e.target.files[0]\r\n      if (!file) return\r\n\r\n      this.preview = URL.createObjectURL(file)\r\n\r\n      try {\r\n        const gps = await exifr.gps(file)\r\n        if (gps?.latitude && gps?.longitude) {\r\n          this.coords = {\r\n            latitude:  Number(gps.latitude),\r\n            longitude: Number(gps.longitude)\r\n          }\r\n        } else {\r\n          this.error = 'La imagen no contiene metadatos GPS.'\r\n        }\r\n      } catch (err) {\r\n        console.error(err)\r\n        this.error = 'Error al leer los metadatos EXIF.'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AAuCA,YAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,MAAA;MAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,MAAA;MACA,YAAAH,MAAA,IACAI,MAAA,CAAAC,QAAA,MAAAL,MAAA,CAAAM,QAAA,KACAF,MAAA,CAAAC,QAAA,MAAAL,MAAA,CAAAO,SAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAAC,CAAA;MACA,KAAAT,KAAA;MACA,KAAAD,MAAA;MAEA,MAAAW,IAAA,GAAAD,CAAA,CAAAE,MAAA,CAAAC,KAAA;MACA,KAAAF,IAAA;MAEA,KAAAZ,OAAA,GAAAe,GAAA,CAAAC,eAAA,CAAAJ,IAAA;MAEA;QACA,MAAAK,GAAA,SAAApB,KAAA,CAAAoB,GAAA,CAAAL,IAAA;QACA,IAAAK,GAAA,EAAAV,QAAA,IAAAU,GAAA,EAAAT,SAAA;UACA,KAAAP,MAAA;YACAM,QAAA,EAAAF,MAAA,CAAAY,GAAA,CAAAV,QAAA;YACAC,SAAA,EAAAH,MAAA,CAAAY,GAAA,CAAAT,SAAA;UACA;QACA;UACA,KAAAN,KAAA;QACA;MACA,SAAAgB,GAAA;QACAC,OAAA,CAAAjB,KAAA,CAAAgB,GAAA;QACA,KAAAhB,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}