{"ast":null,"code":"import * as exifr from 'exifr';\nexport default {\n  data() {\n    return {\n      preview: null,\n      coords: null,\n      error: null,\n      loading: false\n    };\n  },\n  methods: {\n    async handleFile(e) {\n      this.error = null;\n      this.coords = null;\n      const file = e.target.files[0];\n      if (!file) return;\n\n      // miniatura\n      this.preview = URL.createObjectURL(file);\n      this.loading = true;\n      try {\n        const gps = await exifr.gps(file);\n        if (gps?.latitude && gps?.longitude) {\n          this.coords = {\n            lat: gps.latitude,\n            lng: gps.longitude\n          };\n        } else {\n          this.error = 'La imagen no contiene metadatos GPS.';\n        }\n      } catch (err) {\n        console.error(err);\n        this.error = 'Error al leer los metadatos EXIF.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    emitIfReady() {\n      /* Solo emite si tengo coords */\n      if (this.coords) {\n        this.$emit('captured', {\n          coords: this.coords,\n          preview: this.preview\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["exifr","data","preview","coords","error","loading","methods","handleFile","e","file","target","files","URL","createObjectURL","gps","latitude","longitude","lat","lng","err","console","emitIfReady","$emit"],"sources":["src/components/PhotoCapture.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex flex-column align-items-center\">\r\n\r\n    <!-- CARD / PLACEHOLDER -->\r\n    <label class=\"card w-100 mb-3 upload-card\" style=\"max-width: 300px\">\r\n      <input\r\n        ref=\"file\"\r\n        type=\"file\"\r\n        accept=\"image/*;capture=camera\"\r\n        class=\"d-none\"\r\n        @change=\"handleFile\"\r\n      />\r\n\r\n      <!-- Ícono o miniatura -->\r\n      <div class=\"p-3 text-center\">\r\n        <img\r\n          v-if=\"preview\"\r\n          :src=\"preview\"\r\n          class=\"img-fluid rounded shadow\"\r\n        />\r\n        <div v-else class=\"placeholder-icon\">\r\n          <i class=\"bi bi-upload\" style=\"font-size: 4rem\"></i>\r\n          <p class=\"mt-2 mb-0\">Subir imagen de la<br />ubicación</p>\r\n        </div>\r\n      </div>\r\n    </label>\r\n\r\n    <!-- Botón SUBIR o VER MAPA -->\r\n    <button\r\n      class=\"btn w-100\"\r\n      :class=\"preview ? 'btn-primary' : 'btn-dark'\"\r\n      style=\"max-width: 300px\"\r\n      :disabled=\"!preview || loading\"\r\n      @click=\"emitIfReady\"\r\n    >\r\n      {{ preview ? 'Subir' : 'Seleccionar imagen' }}\r\n    </button>\r\n\r\n    <!-- Error -->\r\n    <div v-if=\"error\" class=\"alert alert-warning w-100 mt-3\" style=\"max-width: 300px\">\r\n      {{ error }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as exifr from 'exifr'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      preview: null,\r\n      coords: null,\r\n      error: null,\r\n      loading: false\r\n    }\r\n  },\r\n  methods: {\r\n    async handleFile (e) {\r\n      this.error = null\r\n      this.coords = null\r\n      const file = e.target.files[0]\r\n      if (!file) return\r\n\r\n      // miniatura\r\n      this.preview = URL.createObjectURL(file)\r\n      this.loading = true\r\n\r\n      try {\r\n        const gps = await exifr.gps(file)\r\n        if (gps?.latitude && gps?.longitude) {\r\n          this.coords = { lat: gps.latitude, lng: gps.longitude }\r\n        } else {\r\n          this.error = 'La imagen no contiene metadatos GPS.'\r\n        }\r\n      } catch (err) {\r\n        console.error(err)\r\n        this.error = 'Error al leer los metadatos EXIF.'\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    emitIfReady () {\r\n      /* Solo emite si tengo coords */\r\n      if (this.coords) {\r\n        this.$emit('captured', { coords: this.coords, preview: this.preview })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.upload-card {\r\n  cursor: pointer;\r\n  border: 2px dashed #ccc;\r\n}\r\n.placeholder-icon {\r\n  color: #6c757d;\r\n}\r\n</style>\r\n"],"mappings":"AA8CA,YAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,MAAA;MACAC,KAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAAC,CAAA;MACA,KAAAJ,KAAA;MACA,KAAAD,MAAA;MACA,MAAAM,IAAA,GAAAD,CAAA,CAAAE,MAAA,CAAAC,KAAA;MACA,KAAAF,IAAA;;MAEA;MACA,KAAAP,OAAA,GAAAU,GAAA,CAAAC,eAAA,CAAAJ,IAAA;MACA,KAAAJ,OAAA;MAEA;QACA,MAAAS,GAAA,SAAAd,KAAA,CAAAc,GAAA,CAAAL,IAAA;QACA,IAAAK,GAAA,EAAAC,QAAA,IAAAD,GAAA,EAAAE,SAAA;UACA,KAAAb,MAAA;YAAAc,GAAA,EAAAH,GAAA,CAAAC,QAAA;YAAAG,GAAA,EAAAJ,GAAA,CAAAE;UAAA;QACA;UACA,KAAAZ,KAAA;QACA;MACA,SAAAe,GAAA;QACAC,OAAA,CAAAhB,KAAA,CAAAe,GAAA;QACA,KAAAf,KAAA;MACA;QACA,KAAAC,OAAA;MACA;IACA;IACAgB,YAAA;MACA;MACA,SAAAlB,MAAA;QACA,KAAAmB,KAAA;UAAAnB,MAAA,OAAAA,MAAA;UAAAD,OAAA,OAAAA;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}