{"ast":null,"code":"import { Loader } from '@googlemaps/js-api-loader';\nimport { searchLandsat } from '@/api/landsat';\nimport { sampleNdwi } from '@/utils/ndwi-client';\nexport default {\n  name: 'MapView',\n  props: {\n    coords: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      map: null\n    };\n  },\n  async mounted() {\n    const {\n      latitude: lat,\n      longitude: lng\n    } = this.coords;\n    // carga mapa…\n\n    // 1) Busca la escena y obtén URLs firmadas\n    const ls8 = await searchLandsat({\n      lat,\n      lng\n    });\n\n    // 2) Concatena SAS a las URLs de las bandas\n    const nirUrl = `${ls8.assets.nir08}?${ls8.sas}`;\n    const swirUrl = `${ls8.assets.swir16}?${ls8.sas}`;\n\n    // 3) Llama al helper para calcular NDWI\n    let meanNdwi = null;\n    try {\n      meanNdwi = await sampleNdwi(nirUrl, swirUrl, lat, lng);\n    } catch (e) {\n      console.error('Error leyendo geotiff:', e);\n    }\n\n    // 4) Clasifica y emite el estado\n    let status = 'Sin datos';\n    if (meanNdwi !== null) {\n      if (meanNdwi < 0.10) status = 'Seco';else if (meanNdwi < 0.25) status = 'Medio';else status = 'Húmedo';\n    }\n    this.$emit('ndwi-status', {\n      ndwi: meanNdwi,\n      status\n    });\n  }\n};","map":{"version":3,"names":["Loader","searchLandsat","sampleNdwi","name","props","coords","type","Object","required","data","map","mounted","latitude","lat","longitude","lng","ls8","nirUrl","assets","nir08","sas","swirUrl","swir16","meanNdwi","e","console","error","status","$emit","ndwi"],"sources":["src/components/MapView.vue"],"sourcesContent":["<!-- src/components/MapView.vue -->\r\n<template>\r\n  <div id=\"map\" class=\"w-100 rounded shadow\" style=\"height:350px; position: relative;\">\r\n    <!-- El mapa se inicializa aquí -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Loader } from '@googlemaps/js-api-loader'\r\nimport { searchLandsat } from '@/api/landsat'\r\nimport { sampleNdwi } from '@/utils/ndwi-client'\r\n\r\n\r\nexport default {\r\n  name: 'MapView',\r\n  props: {\r\n    coords: { type: Object, required: true }\r\n  },\r\n  data() {\r\n    return { map: null }\r\n  },\r\n   async mounted() {\r\n    const { latitude: lat, longitude: lng } = this.coords\r\n    // carga mapa…\r\n    \r\n    // 1) Busca la escena y obtén URLs firmadas\r\n    const ls8 = await searchLandsat({ lat, lng })\r\n    \r\n    // 2) Concatena SAS a las URLs de las bandas\r\n    const nirUrl  = `${ls8.assets.nir08}?${ls8.sas}`\r\n    const swirUrl = `${ls8.assets.swir16}?${ls8.sas}`\r\n\r\n    // 3) Llama al helper para calcular NDWI\r\n    let meanNdwi = null\r\n    try {\r\n      meanNdwi = await sampleNdwi(nirUrl, swirUrl, lat, lng)\r\n    } catch (e) {\r\n      console.error('Error leyendo geotiff:', e)\r\n    }\r\n\r\n    // 4) Clasifica y emite el estado\r\n    let status = 'Sin datos'\r\n    if (meanNdwi !== null) {\r\n      if (meanNdwi < 0.10) status = 'Seco'\r\n      else if (meanNdwi < 0.25) status = 'Medio'\r\n      else status = 'Húmedo'\r\n    }\r\n    this.$emit('ndwi-status', { ndwi: meanNdwi, status })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#map {\r\n  position: relative;\r\n}\r\n</style>\r\n"],"mappings":"AAQA,SAAAA,MAAA;AACA,SAAAC,aAAA;AACA,SAAAC,UAAA;AAGA;EACAC,IAAA;EACAC,KAAA;IACAC,MAAA;MAAAC,IAAA,EAAAC,MAAA;MAAAC,QAAA;IAAA;EACA;EACAC,KAAA;IACA;MAAAC,GAAA;IAAA;EACA;EACA,MAAAC,QAAA;IACA;MAAAC,QAAA,EAAAC,GAAA;MAAAC,SAAA,EAAAC;IAAA,SAAAV,MAAA;IACA;;IAEA;IACA,MAAAW,GAAA,SAAAf,aAAA;MAAAY,GAAA;MAAAE;IAAA;;IAEA;IACA,MAAAE,MAAA,MAAAD,GAAA,CAAAE,MAAA,CAAAC,KAAA,IAAAH,GAAA,CAAAI,GAAA;IACA,MAAAC,OAAA,MAAAL,GAAA,CAAAE,MAAA,CAAAI,MAAA,IAAAN,GAAA,CAAAI,GAAA;;IAEA;IACA,IAAAG,QAAA;IACA;MACAA,QAAA,SAAArB,UAAA,CAAAe,MAAA,EAAAI,OAAA,EAAAR,GAAA,EAAAE,GAAA;IACA,SAAAS,CAAA;MACAC,OAAA,CAAAC,KAAA,2BAAAF,CAAA;IACA;;IAEA;IACA,IAAAG,MAAA;IACA,IAAAJ,QAAA;MACA,IAAAA,QAAA,SAAAI,MAAA,eACA,IAAAJ,QAAA,SAAAI,MAAA,gBACAA,MAAA;IACA;IACA,KAAAC,KAAA;MAAAC,IAAA,EAAAN,QAAA;MAAAI;IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}