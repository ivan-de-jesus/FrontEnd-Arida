{"ast":null,"code":"// SIN axios, usando fetch nativo\nexport async function searchLandsat({\n  lat,\n  lng,\n  date = new Date()\n}) {\n  // Rango de 5 días atrás hasta la fecha indicada\n  const end = date.toISOString().split('T')[0]; // hoy\n  const start = new Date(date.getTime() - 5 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]; // hoy-5\n  // Cuadro de 0.1° (~11 km) alrededor del punto\n  const bbox = [lng - 0.05, lat - 0.05, lng + 0.05, lat + 0.05];\n  const body = {\n    collections: ['landsat-8-c2-l2'],\n    bbox,\n    // ✅  Bounding box\n    datetime: `${start}/${end}`,\n    // ✅  Rango explícito\n    limit: 1,\n    query: {\n      'eo:cloud_cover': {\n        lt: 10\n      }\n    }\n  };\n  const r = await fetch('https://planetarycomputer.microsoft.com/api/stac/v1/search', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  });\n  if (!r.ok) throw new Error(`STAC ${r.status}: ${await r.text()}`);\n  const j = await r.json();\n  if (!j.features.length) throw new Error('No se encontró Landsat 8 en los últimos 5 días.');\n  const item = j.features[0];\n\n  /* ---- firmar URLs (SAS) ---- */\n  const sig = item.assets['B4'].href.split('?')[1]; // token SAS\n  const sign = href => `${href}?${sig}`;\n  return {\n    bbox: item.bbox,\n    assets: {\n      quicklook: sign(item.assets.preview.href)\n    }\n  };\n}","map":{"version":3,"names":["searchLandsat","lat","lng","date","Date","end","toISOString","split","start","getTime","bbox","body","collections","datetime","limit","query","lt","r","fetch","method","headers","JSON","stringify","ok","Error","status","text","j","json","features","length","item","sig","assets","href","sign","quicklook","preview"],"sources":["C:/Users/ivan.djgonzalez/Desktop/fotoMapa/photo-gps-viewer/src/api/landsat.js"],"sourcesContent":["// SIN axios, usando fetch nativo\r\nexport async function searchLandsat ({ lat, lng, date = new Date() }) {\r\n    // Rango de 5 días atrás hasta la fecha indicada\r\n    const end   = date.toISOString().split('T')[0]                      // hoy\r\n    const start = new Date(date.getTime() - 5 * 24 * 60 * 60 * 1000)\r\n                   .toISOString().split('T')[0]                         // hoy-5\r\n    // Cuadro de 0.1° (~11 km) alrededor del punto\r\n    const bbox = [lng - 0.05, lat - 0.05, lng + 0.05, lat + 0.05]\r\n  \r\n    const body = {\r\n      collections: ['landsat-8-c2-l2'],\r\n      bbox,                                   // ✅  Bounding box\r\n      datetime: `${start}/${end}`,            // ✅  Rango explícito\r\n      limit: 1,\r\n      query: { 'eo:cloud_cover': { lt: 10 } }\r\n    }\r\n  \r\n    const r = await fetch(\r\n      'https://planetarycomputer.microsoft.com/api/stac/v1/search',\r\n      { method: 'POST', headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body) }\r\n    )\r\n    if (!r.ok)\r\n      throw new Error(`STAC ${r.status}: ${await r.text()}`)\r\n  \r\n    const j = await r.json()\r\n    if (!j.features.length)\r\n      throw new Error('No se encontró Landsat 8 en los últimos 5 días.')\r\n  \r\n    const item = j.features[0]\r\n  \r\n    /* ---- firmar URLs (SAS) ---- */\r\n    const sig = item.assets['B4'].href.split('?')[1]      // token SAS\r\n    const sign = (href) => `${href}?${sig}`\r\n  \r\n    return {\r\n      bbox: item.bbox,\r\n      assets: { quicklook: sign(item.assets.preview.href) }\r\n    }\r\n  }\r\n  \r\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,aAAaA,CAAE;EAAEC,GAAG;EAAEC,GAAG;EAAEC,IAAI,GAAG,IAAIC,IAAI,CAAC;AAAE,CAAC,EAAE;EAClE;EACA,MAAMC,GAAG,GAAKF,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAsB;EACpE,MAAMC,KAAK,GAAG,IAAIJ,IAAI,CAACD,IAAI,CAACM,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAChDH,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAyB;EACpE;EACA,MAAMG,IAAI,GAAG,CAACR,GAAG,GAAG,IAAI,EAAED,GAAG,GAAG,IAAI,EAAEC,GAAG,GAAG,IAAI,EAAED,GAAG,GAAG,IAAI,CAAC;EAE7D,MAAMU,IAAI,GAAG;IACXC,WAAW,EAAE,CAAC,iBAAiB,CAAC;IAChCF,IAAI;IAAoC;IACxCG,QAAQ,EAAE,GAAGL,KAAK,IAAIH,GAAG,EAAE;IAAa;IACxCS,KAAK,EAAE,CAAC;IACRC,KAAK,EAAE;MAAE,gBAAgB,EAAE;QAAEC,EAAE,EAAE;MAAG;IAAE;EACxC,CAAC;EAED,MAAMC,CAAC,GAAG,MAAMC,KAAK,CACnB,4DAA4D,EAC5D;IAAEC,MAAM,EAAE,MAAM;IAAEC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/DT,IAAI,EAAEU,IAAI,CAACC,SAAS,CAACX,IAAI;EAAE,CAC/B,CAAC;EACD,IAAI,CAACM,CAAC,CAACM,EAAE,EACP,MAAM,IAAIC,KAAK,CAAC,QAAQP,CAAC,CAACQ,MAAM,KAAK,MAAMR,CAAC,CAACS,IAAI,CAAC,CAAC,EAAE,CAAC;EAExD,MAAMC,CAAC,GAAG,MAAMV,CAAC,CAACW,IAAI,CAAC,CAAC;EACxB,IAAI,CAACD,CAAC,CAACE,QAAQ,CAACC,MAAM,EACpB,MAAM,IAAIN,KAAK,CAAC,iDAAiD,CAAC;EAEpE,MAAMO,IAAI,GAAGJ,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC;;EAE1B;EACA,MAAMG,GAAG,GAAGD,IAAI,CAACE,MAAM,CAAC,IAAI,CAAC,CAACC,IAAI,CAAC3B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAM;EACtD,MAAM4B,IAAI,GAAID,IAAI,IAAK,GAAGA,IAAI,IAAIF,GAAG,EAAE;EAEvC,OAAO;IACLtB,IAAI,EAAEqB,IAAI,CAACrB,IAAI;IACfuB,MAAM,EAAE;MAAEG,SAAS,EAAED,IAAI,CAACJ,IAAI,CAACE,MAAM,CAACI,OAAO,CAACH,IAAI;IAAE;EACtD,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}