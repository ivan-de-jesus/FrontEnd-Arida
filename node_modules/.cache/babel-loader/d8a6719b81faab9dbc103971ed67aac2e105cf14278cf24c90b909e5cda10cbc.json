{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { Loader } from \"@googlemaps/js-api-loader\";\nimport { searchLandsat } from \"@/api/landsat\";\nimport { sampleNdwi } from \"@/utils/ndwi-client\";\nexport default {\n  name: \"MapView\",\n  props: {\n    coords: {\n      type: Object,\n      required: true\n    },\n    // { latitude, longitude }\n    params: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      map: null\n    };\n  },\n  async mounted() {\n    console.log(\"Entro aqui\");\n    const {\n      latitude: lat,\n      longitude: lng\n    } = this.coords;\n    /* 1 · Google Maps */\n    try {\n      const google = await new Loader({\n        apiKey: process.env.VUE_APP_GOOGLE_KEY,\n        version: \"weekly\"\n      }).load();\n      this.map = new google.maps.Map(document.getElementById(\"map\"), {\n        center: {\n          lat,\n          lng\n        },\n        zoom: 15,\n        disableDefaultUI: true\n      });\n      new google.maps.Marker({\n        position: {\n          lat,\n          lng\n        },\n        map: this.map\n      });\n    } catch (err) {\n      console.warn(\"Google Maps no se pudo cargar:\", err);\n    }\n\n    /* 2-6 · NDWI */\n    let meanNdwi = null;\n    let status = \"Sin datos\";\n    try {\n      console.log(\"Entro aqui\");\n      const {\n        radiusKm,\n        daysBack,\n        cloudMax\n      } = this.params;\n      const ls8 = await searchLandsat({\n        lat,\n        lng,\n        radiusKm,\n        daysBack,\n        cloudMax\n      });\n      const blobNir = ls8.assets.nir08.split(\"?\")[0];\n      const blobSwir = ls8.assets.swir16.split(\"?\")[0];\n      const token = (await fetch(\"https://planetarycomputer.microsoft.com/api/sas/v1/token/landsateuwest/landsat-c2\").then(r => r.json())).token;\n      const nirUrl = `${blobNir}?${token}`;\n      const swirUrl = `${blobSwir}?${token}`;\n      meanNdwi = await sampleNdwi(nirUrl, swirUrl, lat, lng);\n      if (meanNdwi !== null) {\n        if (meanNdwi < 0.1) status = \"Seco\";else if (meanNdwi < 0.25) status = \"Medio\";else status = \"Húmedo\";\n      }\n    } catch (e) {\n      console.error(\"Error NDWI:\", e);\n    }\n    this.$emit(\"ndwi-status\", {\n      ndwi: meanNdwi,\n      status\n    });\n  }\n};","map":{"version":3,"names":["Loader","searchLandsat","sampleNdwi","name","props","coords","type","Object","required","params","data","map","mounted","console","log","latitude","lat","longitude","lng","google","apiKey","process","env","VUE_APP_GOOGLE_KEY","version","load","maps","Map","document","getElementById","center","zoom","disableDefaultUI","Marker","position","err","warn","meanNdwi","status","radiusKm","daysBack","cloudMax","ls8","blobNir","assets","nir08","split","blobSwir","swir16","token","fetch","then","r","json","nirUrl","swirUrl","e","error","$emit","ndwi"],"sources":["src/components/MapView.vue"],"sourcesContent":["<template>\r\n  <div\r\n    id=\"map\"\r\n    class=\"w-100 rounded shadow\"\r\n    style=\"height: 350px; position: relative\"\r\n  ></div>\r\n</template>\r\n\r\n<script>\r\nimport { Loader } from \"@googlemaps/js-api-loader\";\r\nimport { searchLandsat } from \"@/api/landsat\";\r\nimport { sampleNdwi } from \"@/utils/ndwi-client\";\r\n\r\nexport default {\r\n  name: \"MapView\",\r\n  props: {\r\n    coords: { type: Object, required: true }, // { latitude, longitude }\r\n    params: { type: Object, required: true },\r\n  },\r\n  data() {\r\n    return { map: null };\r\n  },\r\n  async mounted() {\r\n    console.log(\"Entro aqui\");\r\n    const { latitude: lat, longitude: lng } = this.coords;\r\n    /* 1 · Google Maps */\r\n    try {\r\n      const google = await new Loader({\r\n        apiKey: process.env.VUE_APP_GOOGLE_KEY,\r\n        version: \"weekly\",\r\n      }).load();\r\n\r\n      this.map = new google.maps.Map(document.getElementById(\"map\"), {\r\n        center: { lat, lng },\r\n        zoom: 15,\r\n        disableDefaultUI: true,\r\n      });\r\n      new google.maps.Marker({ position: { lat, lng }, map: this.map });\r\n    } catch (err) {\r\n      console.warn(\"Google Maps no se pudo cargar:\", err);\r\n    }\r\n\r\n    /* 2-6 · NDWI */\r\n    let meanNdwi = null;\r\n    let status = \"Sin datos\";\r\n\r\n    try {\r\n      console.log(\"Entro aqui\");\r\n      const { radiusKm, daysBack, cloudMax } = this.params;\r\n\r\n      const ls8 = await searchLandsat({\r\n        lat,\r\n        lng,\r\n        radiusKm,\r\n        daysBack,\r\n        cloudMax,\r\n      });\r\n      const blobNir = ls8.assets.nir08.split(\"?\")[0];\r\n      const blobSwir = ls8.assets.swir16.split(\"?\")[0];\r\n\r\n      const token = (\r\n        await fetch(\r\n          \"https://planetarycomputer.microsoft.com/api/sas/v1/token/landsateuwest/landsat-c2\"\r\n        ).then((r) => r.json())\r\n      ).token;\r\n\r\n      const nirUrl = `${blobNir}?${token}`;\r\n      const swirUrl = `${blobSwir}?${token}`;\r\n\r\n      meanNdwi = await sampleNdwi(nirUrl, swirUrl, lat, lng);\r\n\r\n      if (meanNdwi !== null) {\r\n        if (meanNdwi < 0.1) status = \"Seco\";\r\n        else if (meanNdwi < 0.25) status = \"Medio\";\r\n        else status = \"Húmedo\";\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error NDWI:\", e);\r\n    }\r\n\r\n    this.$emit(\"ndwi-status\", { ndwi: meanNdwi, status });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#map {\r\n  position: relative;\r\n}\r\n</style>\r\n"],"mappings":";;AASA,SAAAA,MAAA;AACA,SAAAC,aAAA;AACA,SAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,MAAA;MAAAC,IAAA,EAAAC,MAAA;MAAAC,QAAA;IAAA;IAAA;IACAC,MAAA;MAAAH,IAAA,EAAAC,MAAA;MAAAC,QAAA;IAAA;EACA;EACAE,KAAA;IACA;MAAAC,GAAA;IAAA;EACA;EACA,MAAAC,QAAA;IACAC,OAAA,CAAAC,GAAA;IACA;MAAAC,QAAA,EAAAC,GAAA;MAAAC,SAAA,EAAAC;IAAA,SAAAb,MAAA;IACA;IACA;MACA,MAAAc,MAAA,aAAAnB,MAAA;QACAoB,MAAA,EAAAC,OAAA,CAAAC,GAAA,CAAAC,kBAAA;QACAC,OAAA;MACA,GAAAC,IAAA;MAEA,KAAAd,GAAA,OAAAQ,MAAA,CAAAO,IAAA,CAAAC,GAAA,CAAAC,QAAA,CAAAC,cAAA;QACAC,MAAA;UAAAd,GAAA;UAAAE;QAAA;QACAa,IAAA;QACAC,gBAAA;MACA;MACA,IAAAb,MAAA,CAAAO,IAAA,CAAAO,MAAA;QAAAC,QAAA;UAAAlB,GAAA;UAAAE;QAAA;QAAAP,GAAA,OAAAA;MAAA;IACA,SAAAwB,GAAA;MACAtB,OAAA,CAAAuB,IAAA,mCAAAD,GAAA;IACA;;IAEA;IACA,IAAAE,QAAA;IACA,IAAAC,MAAA;IAEA;MACAzB,OAAA,CAAAC,GAAA;MACA;QAAAyB,QAAA;QAAAC,QAAA;QAAAC;MAAA,SAAAhC,MAAA;MAEA,MAAAiC,GAAA,SAAAzC,aAAA;QACAe,GAAA;QACAE,GAAA;QACAqB,QAAA;QACAC,QAAA;QACAC;MACA;MACA,MAAAE,OAAA,GAAAD,GAAA,CAAAE,MAAA,CAAAC,KAAA,CAAAC,KAAA;MACA,MAAAC,QAAA,GAAAL,GAAA,CAAAE,MAAA,CAAAI,MAAA,CAAAF,KAAA;MAEA,MAAAG,KAAA,IACA,MAAAC,KAAA,CACA,mFACA,EAAAC,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,IAAA,KACAJ,KAAA;MAEA,MAAAK,MAAA,MAAAX,OAAA,IAAAM,KAAA;MACA,MAAAM,OAAA,MAAAR,QAAA,IAAAE,KAAA;MAEAZ,QAAA,SAAAnC,UAAA,CAAAoD,MAAA,EAAAC,OAAA,EAAAvC,GAAA,EAAAE,GAAA;MAEA,IAAAmB,QAAA;QACA,IAAAA,QAAA,QAAAC,MAAA,eACA,IAAAD,QAAA,SAAAC,MAAA,gBACAA,MAAA;MACA;IACA,SAAAkB,CAAA;MACA3C,OAAA,CAAA4C,KAAA,gBAAAD,CAAA;IACA;IAEA,KAAAE,KAAA;MAAAC,IAAA,EAAAtB,QAAA;MAAAC;IAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}